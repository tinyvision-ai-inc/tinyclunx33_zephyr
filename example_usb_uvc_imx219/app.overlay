#include <zephyr/dt-bindings/usb/video.h>

/ {
	chosen {
		zephyr,shell-uart = &uart0;
	};
};

/* This builds a complete chain through "source = <&...>;":
 * - USB Video Class (UVC), exposing the controls to the host and communicating with it.
 * - UVC Manager, controlled by the UVC class protocol, doing I/O between the sensor and USB.
 * - IMX219 sensor, with configuration coming from the UVC Manager and the host before it.
 */

&zephyr_udc0 {
	endpoints {
		ep@81 {
			num-trbs = <16>;
			uvcmanager = <&uvcmanager>;
		};
	};

	uvc0: zephyr_uvc0 {
		compatible = "zephyr,uvc";
		status = "okay";
		source = <&uvcmanager>;

		/* This builds a control chain to explain the organization
		 * of the video system to the host, changing the topology
		 * here will not affect how the device works.
		 */
		uvc0cam: cam {
			compatible = "zephyr,uvc-control-camera";
			control-ids = <	UVC_CONTROL_CAMERA_AE_MODE
					UVC_CONTROL_CAMERA_EXPOSURE_ABSOLUTE>;
			control-target = <&imx219>;
		};
		uvc0out: out {
			compatible = "zephyr,uvc-control-output";
			source-entity = <&uvc0cam>;
		};

		/* This lists the formats supported by the video device which
		 * can be selected by the host at runtime.
		 */
		format_uncompressed {
			compatible = "zephyr,uvc-format-uncompressed";
			fourcc = "YUYV";
			guid = [UVC_GUID_YUY2];
			bits-per-pixel = <16>;

			FHD {
				/* There are 2 rows and columns less as required to do debayer. */
				size = <1918 1078>;
				max-fps = <60>;
			};
		};
	};
};

&uvcmanager {
	/* The UVC Manager will add 2 pixels itself when setting the format of the image sensor. */
	source = <&imx219>;
};

&i2c0 {
	imx219: imx219@10 {
		compatible = "sony,imx219";
		reg = <0x10>;
		status = "okay";
	};
};
